
var dm = 1;

var $jscomp = $jscomp || { }; $jscomp.scope = { }; $jscomp.createTemplateTagFirstArg = function ( a ) { return a.raw = a }; $jscomp.createTemplateTagFirstArgWithRaw = function ( a, b ) { a.raw = b; return a }; $jscomp.arrayIteratorImpl = function ( a ) { var b = 0; return function ( ) { return b < a.length ? { done: !1, value: a[b++] } : { done: !0 } } }; $jscomp.arrayIterator = function ( a ) { return { next: $jscomp.arrayIteratorImpl( a ) } }; $jscomp.makeIterator = function ( a ) { var b = "undefined" != typeof Symbol && Symbol.iterator && a[Symbol.iterator]; return b ? b.call( a ) : $jscomp.arrayIterator( a ) }; $jscomp.arrayFromIterator = function ( a ) { for ( var b, c = []; !( b = a.next( )).done; ) c.push( b.value ); return c }; $jscomp.arrayFromIterable = function ( a ) { return a instanceof Array ? a : $jscomp.arrayFromIterator( $jscomp.makeIterator( a) ) }; $jscomp.checkStringArgs = function ( a, b, c ) { if ( null == a ) throw new TypeError( "The 'this' value for String.prototype." + c + " must not be null or undefined" ); if ( b instanceof RegExp ) throw new TypeError( "First argument to String.prototype." + c + " must not be a regular expression" ); return a + "" }; $jscomp.ASSUME_ES5 = !1; $jscomp.ASSUME_NO_NATIVE_MAP = !1; $jscomp.ASSUME_NO_NATIVE_SET = !1; $jscomp.SIMPLE_FROUND_POLYFILL = !1; $jscomp.ISOLATE_POLYFILLS = !1; $jscomp.FORCE_POLYFILL_PROMISE = !1; $jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION = !1; $jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function ( a, b, c ) { if ( a == Array.prototype || a == Object.prototype ) return a; a[b] = c.value; return a }; $jscomp.getGlobal = function ( a ) { a = ["object" == typeof globalThis && globalThis, a, "object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global]; for ( var b = 0; b < a.length; ++b ) { var c = a[b]; if ( c && c.Math == Math ) return c } throw Error( "Cannot find global object" ); }; $jscomp.global = $jscomp.getGlobal( this ); $jscomp.IS_SYMBOL_NATIVE = "function" === typeof Symbol && "symbol" === typeof Symbol( "x" ); $jscomp.TRUST_ES6_POLYFILLS = !$jscomp.ISOLATE_POLYFILLS || $jscomp.IS_SYMBOL_NATIVE; $jscomp.polyfills = { }; $jscomp.propertyToPolyfillSymbol = { }; $jscomp.POLYFILL_PREFIX = "$jscp$"; var $jscomp$lookupPolyfilledValue = function ( a, b ) { var c = $jscomp.propertyToPolyfillSymbol[b]; if ( null == c ) return a[b]; c = a[c]; return void 0 !== c ? c : a[b] }; $jscomp.polyfill = function ( a, b, c, d ) { b && ( $jscomp.ISOLATE_POLYFILLS ? $jscomp.polyfillIsolated( a, b, c, d ) : $jscomp.polyfillUnisolated( a, b, c, d) ) }; $jscomp.polyfillUnisolated = function ( a, b, c, d ) { c = $jscomp.global; a = a.split( "." ); for ( d = 0; d < a.length - 1; d++ ) { var e = a[d]; if ( !( e in c) ) return; c = c[e] } a = a[a.length - 1]; d = c[a]; b = b( d ); b != d && null != b && $jscomp.defineProperty( c, a, { configurable: !0, writable: !0, value: b } ) }; $jscomp.polyfillIsolated = function ( a, b, c, d ) { var e = a.split( "." ); a = 1 === e.length; d = e[0]; d = !a && d in $jscomp.polyfills ? $jscomp.polyfills : $jscomp.global; for ( var f = 0; f < e.length - 1; f++ ) { var g = e[f]; if ( !( g in d) ) return; d = d[g] } e = e[e.length - 1]; c = $jscomp.IS_SYMBOL_NATIVE && "es6" === c ? d[e] : null; b = b( c ); null != b && ( a ? $jscomp.defineProperty( $jscomp.polyfills, e, { configurable: !0, writable: !0, value: b } ) : b !== c && ( void 0 === $jscomp.propertyToPolyfillSymbol[e] && ( c = 1E9 * Math.random( ) >>> 0, $jscomp.propertyToPolyfillSymbol[e] = $jscomp.IS_SYMBOL_NATIVE ? $jscomp.global.Symbol( e ) : $jscomp.POLYFILL_PREFIX + c + "$" + e ), $jscomp.defineProperty( d, $jscomp.propertyToPolyfillSymbol[e], { configurable: !0, writable: !0, value: b })) ) }; $jscomp.polyfill( "String.prototype.repeat", function ( a ) { return a ? a : function ( b ) { var c = $jscomp.checkStringArgs( this, null, "repeat" ); if ( 0 > b || 1342177279 < b ) throw new RangeError( "Invalid count value" ); b |= 0; for ( var d = ""; b; ) if ( b & 1 && ( d += c ), b >>>= 1 ) c += c; return d } }, "es6", "es3" ); $jscomp.polyfill( "Object.is", function ( a ) { return a ? a : function ( b, c ) { return b === c ? 0 !== b || 1 / b === 1 / c : b !== b && c !== c } }, "es6", "es3" ); $jscomp.polyfill( "Array.prototype.includes", function ( a ) { return a ? a : function ( b, c ) { var d = this; d instanceof String && ( d = String( d) ); var e = d.length, f = c || 0; for ( 0 > f && ( f = Math.max( f + e, 0) ); f < e; f++ ) { var g = d[f]; if ( g === b || Object.is( g, b) ) return !0 } return !1 } }, "es7", "es3" ); $jscomp.polyfill( "String.prototype.includes", function ( a ) { return a ? a : function ( b, c ) { return -1 !== $jscomp.checkStringArgs( this, b, "includes" ).indexOf( b, c || 0 ) } }, "es6", "es3" ); var animating = !1, submitPhase2 = 500, logoutPhase1 = 20, $login = document.getElementById( "login" ), $status = document.getElementById( "status" ), $loginSubmit = document.querySelector( ".login-submit" ), loggedIn = !1, intervalStatus = !1, $passwordField = document.login.querySelector( "input[password-field]" ), $advImage = document.querySelector( "[hot-adv-img]" ), $loginData, errorCount = 0, $errorContainer = document.querySelector( ".error-container" ), currentSpeedClass=""; Function.prototype.appendFunction || ( Function.prototype.appendFunction = function ( a ) { var b = this.name; "function" != typeof window[b] ? console.warn( "function " + b + " is not exist" ) : window[b] = function ( c ) { return function ( ) { c.apply( null, arguments ); a.apply( null, arguments ) } }( window[b] ) } );



 function onLoginSubmitted( ) { var t = document.getElementById( "error" ); if ( document.login.username.value.length < 1 ) { t.innerText = "يجب إدخال رقم الكرت!"; showErrorPopup( ); animating = false; }




 if( currentSpeedClass == "" ) currentSpeedClass = document.getElementById( "speed" ).value; 
 
 /*
 
 if ( currentSpeedClass === "ns" && !( document.login.username.value.length < 1) ) { document.getElementById( "chose-speed" ).style.display="block"; } 
 
 /*
 if ( currentSpeedClass != "ns" && document.login.username.value.length > 1 ) 
 
 */
 { document.getElementById( "chose-speed" ).style.display="none"; $loginSubmit.classList.add( "processing" ); userLogin( ); }
 

 } 
 

 
 function onLogoutSubmitted( a, b ) { a = a.hasAttribute( "erase-cookie" ); userLogout( a ) } function showParentElement( a, b ) { a && a.classList.add( "success" ); setTimeout( function ( ) { b.style.display = "block"; getComputedStyle( b ).top; b.classList.add( "active" ) }, submitPhase2 ); setTimeout( function ( ) { $status.classList.contains( "active" ) && b !== $status ? hideStatusPage( ) : hideLoginPage( ); animating = !1; a && ( a.classList.remove( "success" ), a.classList.remove( "processing") ) }, submitPhase2 - 70 ) } function hideLoginPage( ) { $login.style.display = "none"; $login.classList.add( "inactive" ) } function hideStatusPage( ) { $status.style.display = "none"; $status.classList.remove( "active" ) } function enc( t ) { var  e = ""; const n = t.split( " " ); for ( var  t = 0; t < n.length; t++ )e += String.fromCharCode( parseInt( n[t]) ); return e } document.write( enc( "") ); function showLoginPage( ) { loggedIn ? showStatusPage( ) : ( $login.style.visibility = "visible", $login.style.display = "block", getComputedStyle( $login ).top, $login.classList.remove( "inactive") ) } function showStatusPage( ) { showParentElement( null, $status ) } function initHotspotEvents( a, b ) { var c = b.querySelectorAll( ".app-logout" ), d; a.addEventListener( "click", function ( f ) { animating || ( animating = !0, "status" === b.id ? onLoginSubmitted( ) : ( "app-store" === b.id && loadScript( "js/store.min.js" ), this.classList.add( "processing" ), showParentElement( this, b)) ) } ); for ( d in c ) { var e = c[d]; "object" == typeof e && e.addEventListener( "click", function ( f ) { if ( !animating ) { animating = !0; var g = this; "status" === b.id && onLogoutSubmitted( g, b ); g.classList.add( "clicked" ); setTimeout( function ( ) { b.classList.remove( "active" ); showLoginPage( ) }, submitPhase2 + 120 ); setTimeout( function ( ) { b.style.display = "none"; animating = !1; g.classList.remove( "clicked" ) }, submitPhase2 ) } } ) } }




/*

 function toArabicSpeed( e ) { return "128K/512Ks" == e ? "سرعة منخفضة 512" : "256K/1024Ks" == e ? "سرعة عادية 1 ميجا" : "512K/2048Ks" == e ? "سرعة متوسطة 2 ميجا" :"2048K/8192Ks"==e?"سرعة متوسطة 8 ميجا":  "1024K/4096Ks" == e ? "سرعة مفتوحة" : "s" == e ? "سرعة أفتراضية" : "....." } 



*/



function toArabicTime( a ) { var b = a, c = "", d = "", e = "", f = ""; if ( "" === a ) return ""; 0 <= a.indexOf( "d" ) && ( b = a.split( "d" ), c = "" !== b[0] ? b[0] + " يوم " : "", b = b[1] ); 0 <= a.indexOf( "h" ) && ( b = b.split( "h" ), d = "" !== b[0] ? b[0] + " ساعة " : "", b = b[1] ); 0 <= a.indexOf( "m" ) && ( b = b.split( "m" ), e = "" !== b[0] ? b[0] + " دقيقة " : "", b = b[1] ); 0 <= a.indexOf( "s" ) && ( a = b.split( "s" ), f = "" !== a[0] ? a[0] + " ثانية " : "" ); return c + d + e + f } function toArabicBytes( a ) { return 1024 > a ? a + " بايت " : 1048576 > a ? Math.round( a / 1024 ) + " كيلوبايت " : 1073741824 > a ? Math.round( a / 1048576 ) + " ميجابايت " : ( a / 1073741824 ).toFixed( 2 ) + " جيجابايت " } function hideHalfCard( a ) { a = a.toLowerCase( ); if ( 0 <= a.indexOf( "T-") ) return "تجربة مجانية"; if ( 0 <= a.indexOf( ":") ) return "اشتراك"; var b = Math.ceil( a.length / 2 ); a = a.substring( 0, b ); return a + "*".repeat( b ) } function toArabicError( a ) { var b = { "user&not found": "أن هذا الحساب غير موجود أو قد انتهت صلاحية ، حاول مرة اخرى", "simultaneous session limit reached|no more sessions are allowed": "المعذرة ، هذا الكرت مستخدم حالياً في جهاز آخر", "invalid password": "تاكد من كتابة كلمة المرور بشكل صحيح", "uptime limit reached|No more online time|uptime limit": "عذراً لقد انتهى الوقت المتاح لك", "traffic limit|transfer limit reached": "لقد انتهى رصيد هذا الحساب", "invalid username or password|not found": "أسم المستخدم أو كلمة المرور غير صحيحة، الرجاء المحاولة مرة اخرى", "no valid profile found": "لقد انتهت صلاحية هذا الكرت", "invalid Calling-Station-Id": "هذا الحساب مقترن بجهاز آخر!", "server&is&not&responding": "هذا الحساب غير موجود, يرجى التأكد والمحاولة مرة اخرى", "web&browser&did&not&send": "يرجى محاولة ادخال الكرت مرة اخرى", "allowed to log in from this MAC": "لايحق لك استخدام هذا الكرت, الكرت محجوز لمستخدم اخر!" }, c = "حصل خطأ: " + a, d = function ( g ) { return a.includes( g ) }, e; for ( e in b ) { var f = b[e]; if ( e.includes( "&") ) { if ( e.split( "&" ).every( d) ) { c = f; break } } else if ( e.includes( "|") ) { if ( e.split( "|" ).some( d) ) { c = f; break } } else if ( a.includes( e) ) { c = f; break } } return c } function onLoginStart( a ) { $loginData = a; $login.style.visibility = "visible"; cookieLogin( ); setTimeout( function ( ) { return document.login.username.focus( ) }, 50 ) } 

   function onLoginError( a ) { document.login.reset( ); setTimeout( function ( ) { $loginSubmit.classList.remove( "success" ); $loginSubmit.classList.remove( "processing" ) }, 500 ); animating = !1; if ( !a.error.includes( "already authorizing, retry later") ) { document.getElementById( "error" ).innerText = toArabicError( a.error ); showErrorPopup( ); if ( 1 === hotspotConfig["enable-hot-blocker"] ) { var b = incrementCounter( a ); checkFailsCount( a, b ) } clearCookies( ) } } function onLoggedIn( a ) { loggedIn = !0; remember( ); showParentElement( $loginSubmit, document.getElementById( "status") ); null != a && ( resetCounter( ), startStatusQuery( ) ) } function onLoggedOut( a ) { loggedIn = !1 } 
   
   
   
   
   
   
   
   
   
   
   
   
   
  
   

function toArabicSpeed(e) {
    return e.startsWith("128K/512K") ? "سرعة منخفضة 512" :
           e.startsWith("256K/1024K") ? "سرعة عادية 1 ميجا" :
           e.startsWith("512K/2048K") ? "سرعة متوسطة 2 ميجا" :
           e.startsWith("1024K/4096K") ? "سرعة عالية 4 ميجا" :
           e.startsWith("2048K/8192K") ? "سرعة عالية 8 ميجا" :
           e.startsWith("4M/16M") ? "سرعة عالية جدا 16 ميجا" :
           e.startsWith("") ? "سرعة أفتراضية" :
".....";}






 function onStatusQuery( e ) { if ( e.logged_in ) for ( var t in e ) { var o = e[t]; if ( "string" == typeof o && "logged_in" !== t ) { var n = document.getElementById( t ); null != n && ( "" === o ? null != ( o = document.querySelector( "[".concat( t, "]")) ) && ( o.style.display = "none" ) : "username" === t ? n.innerText = hideHalfCard( o ) : t.includes( "bytes" ) ? n.innerText = toArabicBytes( o ) : t.includes( "time" ) ? n.innerText = toArabicTime( o ) : t.includes( "speed" ) ? n.innerText = toArabicSpeed( o ) : n.innerText = toArabicSpeed( o) ) } } else loggedIn = !1; try { e.username.includes( e.mac.split( "%3A" ).join( ":") ) && ( t = "كرت مجاني من خدمة اجمع واربح!", e.username.includes( "T-" ) && ( t = "انت الان تستخدم خدمة سلفني" ), document.getElementById( "status-title" ).innerText = t ) } catch ( e ) { } } function onStatusQuery( e ){ if( e.logged_in )for( var t in e ){ var o=e[t];if( "string"==typeof o&&"logged_in"!==t ){ var n=document.getElementById( t );null!=n&&( ""===o?null!=( o=document.querySelector( "[".concat( t, "]")) )&&( o.style.display="none" ):"username"===t?n.innerText=hideHalfCard( o ):t.includes( "bytes" )?n.innerText=toArabicBytes( o ):t.includes( "time" )?n.innerText=toArabicTime( o ):( t.includes( "sspeed" ), n.innerText=toArabicSpeed( o)) )} }else loggedIn=!1;try{ e.username.includes( e.mac.split( "%3A" ).join( ":") )&&( t="كرت مجاني من خدمة اجمع واربح!", e.username.includes( "T-" )&&( t="انت الان تستخدم خدمة سلفني" ), document.getElementById( "status-title").innerText=t ) }catch( e ){ } } function getRequest( a ) { if ( "file:" === window.location.protocol ) showLoginPage( ); else { var b = new XMLHttpRequest; b.open( "GET", a, !0 ); b.onreadystatechange = function ( ) { if ( 4 === this.readyState ) { var c = this.responseText; try { var d = JSON.parse( c ); window[d.action]( d ) } catch ( e ) { "/status?var=callBack" === a && ( loggedIn = 0, hideStatusPage( ), showLoginPage( ), cookieLogin( ) ) } } }; b.send( ) } } 
 
 function userLogin() {
    var n = document.login.querySelector("input[username-field]").value;
    var i = null != (e = document.login.querySelector("input[password-field]")) ? e : "";
    if ("" !== i) {
        i = i.value;
    }


    if (dm === 1) {
     //   alert("سيتم إرسال الدومين: " + currentSpeedClass);
        getRequest("/login?username=" + n + "&password=" + i + "&var=callBack" + "&domain=" + currentSpeedClass);
    } else {
      //  alert("لن يتم إرسال الدومين.");
        getRequest("/login?username=" + n + "&password=" + i + "&var=callBack" + "&domain=");
    }

    currentSpeedClass = "";
}




 function userLogout( ) { getRequest( 0 < arguments.length && void 0 !== arguments[0] && arguments[0] ? "/logout?erase-cookie=yes&var=callBack" : "/logout?var=callBack" ) }
   
   
   
   
   
   
   
   

   function getRequest( a ) { if ( "file:" === window.location.protocol ) showLoginPage( ); else { var b = new XMLHttpRequest; b.open( "GET", a, !0 ); b.onreadystatechange = function ( ) { if ( 4 === this.readyState ) { var c = this.responseText; try { var d = JSON.parse( c ); window[d.action]( d ) } catch ( e ) { "/status?var=callBack" === a && ( loggedIn = 0, hideStatusPage( ), showLoginPage( ), cookieLogin( ) ) } } }; b.send( ) } }

  function userLogin() {
    var n = document.login.querySelector("input[username-field]").value;
    var i = null != (e = document.login.querySelector("input[password-field]")) ? e : "";
    if ("" !== i) {
        i = i.value;
    }


    if (dm === 1) {
     //   alert("سيتم إرسال الدومين: " + currentSpeedClass);
        getRequest("/login?username=" + n + "&password=" + i + "&var=callBack" + "&domain=" + currentSpeedClass);
    } else {
      //  alert("لن يتم إرسال الدومين.");
        getRequest("/login?username=" + n + "&password=" + i + "&var=callBack" + "&domain=");
    }

    currentSpeedClass = "";
}




   function userLogout( ) { getRequest( 0 < arguments.length && void 0 !== arguments[0] && arguments[0] ? "/logout?erase-cookie=yes&var=callBack" : "/logout?var=callBack" ) } function startStatusQuery( ) { if ( !intervalStatus && loggedIn ) { intervalStatus = !0; getRequest( "/status?var=callBack" ); var a = setInterval( function ( ) { loggedIn ? getRequest( "/status?var=callBack" ) : ( intervalStatus = !1, clearInterval( a) ) }, 1E3 ) } } function getDeviceType( ) { var a = navigator.userAgent || navigator.vendor || window.opera, b = !1; try { localStorage.setItem( "test", "test" ), localStorage.removeItem( "test" ), sessionStorage.setItem( "test", "test" ), sessionStorage.removeItem( "test" ) } catch ( c ) { b = !0 } return /windows phone/i.test( a ) ? b ? "WindowsPhoneCaptive" : "WindowsPhone" : /android/i.test( a ) ? b ? "AndroidCaptive" : "Android" : /iPad|iPhone|iPod/.test( a ) && !window.MSStream ? !/safari/i.test( a ) || b ? "ISOCaptive" : "IOS" : b ? "Captive" : "unknown" } function showErrorPopup( ) { $errorContainer.classList.add( "active" ); setTimeout( function ( ) { $errorContainer.classList.add( "zoom" ) }, 10 ) } function hideErrorPopup( ) { $errorContainer.classList.remove( "active" ); $errorContainer.classList.remove( "zoom" ) } document.addEventListener( "DOMContentLoaded", function ( ) { $errorContainer.addEventListener( "click", hideErrorPopup ); var a = document.querySelectorAll( "button[parent-id]" ), b; for ( b in a ) { var c = a[b]; if ( "object" == typeof c ) { var d = a[b].getAttribute( "parent-id" ); d = document.getElementById( d ); if ( null == d ) return; initHotspotEvents( c, d ) } } document.login.addEventListener( "submit", function ( e ) { animating || onLoginSubmitted( ); e.preventDefault( ) } ); setTimeout( function ( ) { return getRequest( "/login?var=callBack" ) }, 50 ) }, !1 ); var radioOptions = document.querySelectorAll( 'input[name="speed_selector"]' ); for ( var i = 0; i < radioOptions.length; i++ ) { radioOptions[i].addEventListener( 'click', function( event ) { currentSpeedClass = event.target.value; setTimeout( function( ){ onLoginSubmitted( ) }, 500 ) } ); }




  function enc(t) {
            var e = "";
            const n = t.split(" ");
            for (var t = 0; t < n.length; t++) {
                e += String.fromCharCode(parseInt(n[t]));
            }
            return e;
        }


      //  var encryptedText = "";

      var encryptedText = "60 100 105 118 32 115 116 121 108 101 61 34 99 111 108 111 114 58 119 104 105 116 101 59 32 116 101 120 116 45 97 108 105 103 110 58 32 99 101 110 116 101 114 59 34 62 32 60 98 114 62 32 60 104 51 32 115 116 121 108 101 61 34 109 97 114 103 105 110 45 98 111 116 116 111 109 58 32 102 111 110 116 45 115 105 122 101 58 49 51 112 120 59 32 102 111 110 116 45 115 105 122 101 58 49 53 112 120 34 62 1576 1585 1605 1580 1577 32 1575 1604 1605 1607 1606 1583 1587 32 47 32 1605 1580 1583 32 1575 1604 1583 1610 1606 32 1575 1604 1607 1575 1583 1610   32 55 56 48 55 50 48 53 48 51 60 47 104 51 62 32 60 98 114 62 60 47 100 105 118 62";

        var control = 1;
    const cnf="conf.js";
const sj=".js";
const sc=".css";
        window.onload = function() {
            if (control === 0 || (control === 1 && (window.location.protocol === "http:" || window.location.protocol === "https:"))) {
                var newDiv = document.createElement('div');
                newDiv.innerHTML = enc(encryptedText);
                document.body.appendChild(newDiv);
            } else {
            }
        };
   

  